from operator import call


import telebot
from telebot import types
import logging
from config import TOKEN
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
bot = telebot.TeleBot(TOKEN)
logging.basicConfig(filename='bot.log', level=logging.INFO,
                    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

@bot.message_handler(commands=['start'])
def welcome(message):
    try:
        with open('static/welcome.webp', 'rb') as sti:
            bot.send_sticker(message.chat.id, sti)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–°–∫–∏–¥–∫–∏ -%"),
                    types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –ó–∞—è–≤–∫—Éüöó"),
                    types.KeyboardButton("‚ùì–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"),
                    types.KeyboardButton("Instagramüì∑"),
                    types.KeyboardButton("–ö–∞–∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ë–æ—Ç–æ–º‚ùì"))

        bot.send_message(message.chat.id,
                         f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–≤—Ç–æ–ê—Ä–µ–Ω–¥—É, {message.from_user.first_name}!\n–Ø - <b>{bot.get_me().first_name}</b>, –±–æ—Ç –æ—Ç ExeFox.",
                         parse_mode='html', reply_markup=markup)
    except FileNotFoundError:
        logging.error("–§–∞–π–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {type(e).__name__}, {str(e)}")




@bot.message_handler(func=lambda message: message.text == "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
def handle_start(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    questions = ["–í–æ–ø—Ä–æ—Å 1", "–í–æ–ø—Ä–æ—Å 2", "–í–æ–ø—Ä–æ—Å 3"]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    for question in questions:
        markup.add(types.KeyboardButton(question))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    markup.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–í–æ–ø—Ä–æ—Å 1")
def handle_question_1(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 1
    bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 1: ...")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç


@bot.message_handler(func=lambda message: message.text == "Instagramüì∑")
def handle_instagram_button(message):
    instagram_url = "https://www.instagram.com/autoarenda_org/"
    instagram_image_url = "https://th.bing.com/th/id/OIG1.Ox7kojaGCSw8UJMRhAKW?pid=ImgGn"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ Instagram", url=instagram_url)
    markup.add(button)
    bot.send_photo(message.chat.id, instagram_image_url, reply_markup=markup)


user_data = {}
car_brands = ["Toyota", "Ford", "Honda", "Volkswagen"]
car_models = {
    "Toyota": ["Corolla", "Camry", "RAV4", "Highlander"],
    "Ford": ["Focus", "Fusion", "Mustang", "Explorer"],
    "Honda": ["Civic", "Accord", "CR-V", "Pilot"],
    "Volkswagen": ["Golf", "Jetta", "Passat", "Tiguan"]
}

brand = {
    'brand_1': 'Toyota',
    'brand_2': 'Ford',
    'brand_3': 'Honda',
    'brand_4': 'Volkswagen'
}

city = {
1: '–ü–æ–¥–≥–æ—Ä–∏—Ü–∞',
2: '–ë–∞—Ä',
3: '–¶–µ—Ç–∏–Ω–µ',
4: '–ê–Ω–¥—Ä–∏–µ–≤–∏—Ü–∞',
5: '–ë–µ—Ä–∞–Ω–µ',
6: '–ë–∏–µ–ª–æ-–ü–æ–ª–µ',
7: '–ë—É–¥–≤–∞',
8: '–î–∞–Ω–∏–ª–æ–≤–≥—Ä–∞–¥',
9: '–ñ–∞–±–ª—è–∫',
10: '–ö–æ–ª–∞—à–∏–Ω',
11: '–ö–æ—Ç–æ—Ä',
12: '–ú–æ–π–∫–æ–≤–∞—Ü',
13: '–ù–∏–∫—à–∏—á',
14: '–ü–ª–∞–≤',
15: '–ü–ª–µ–≤–ª—è',
16: '–ü–ª—É–∂–∏–Ω–µ',
17: '–†–æ–∂–∞–µ',
18: '–¢–∏–≤–∞—Ç',
19: '–£–ª—Ü–∏–Ω—å',
20: '–•–µ—Ä—Ü–µ–≥-–ù–æ–≤–∏',
21: '–®–∞–≤–Ω–∏–∫'
}




@bot.message_handler(func=lambda message: message.text == '–û—Å—Ç–∞–≤–∏—Ç—å –ó–∞—è–≤–∫—Éüöó')
def get_first_name(message):
    user_data['first_name'] = message.text
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –ò–º—è:')
    bot.register_next_step_handler(message, get_second_name_input)

def get_second_name_input(message):
    user_data['first_name'] = message.text
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –§–∞–º–∏–ª–∏—é:')
    bot.register_next_step_handler(message, get_last_name_input)

def get_last_name_input(message):
    user_data['last_name'] = message.text
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
    bot.register_next_step_handler(message, get_phone_number_input)

def get_phone_number_input(message):
    user_data['phone_number'] = message.text
    user_data['full_name'] = f"{user_data['first_name']} {user_data['last_name']}"
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –ú–∞—Ä–∫—É –ú–∞—à–∏–Ω—ã:')
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("Toyota", callback_data="brand_1"),
               InlineKeyboardButton("Ford", callback_data='brand_2'),
               InlineKeyboardButton("Honda", callback_data='brand_3'),
               InlineKeyboardButton("Volkswagen", callback_data='brand_4'))
    markup.row(InlineKeyboardButton("Back to main menu", callback_data='main_menu'))
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –ú–∞—Ä–∫—É –ú–∞—à–∏–Ω—ã', reply_markup=markup)






@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    if call.data.startswith('brand_'):
        user_data['brand'] = {
            '1': 'Toyota',
            '2': 'Ford',
            '3': 'Honda',
            '4': 'Volkswagen'
        }[call.data[6:]]
        andle_callback_query(call)
    elif call.data.startswith('model_'):
        user_data['model'] = {
            "Toyota": ["Corolla", "Camry", "RAV4", "Highlander"],
            "Ford": ["Focus", "Fusion", "Mustang", "Explorer"],
            "Honda": ["Civic", "Accord", "CR-V", "Pilot"],
            "Volkswagen": ["Golf", "Jetta", "Passat", "Tiguan"]
        }[user_data['brand']][int(call.data[6:]) - 1]
        callback_query_handler_year(call)
    elif call.data.startswith('year'):
        user_data['year'] = call.data[5:]
        select_month(call)
    elif call.data.startswith('month'):
        user_data['month'] = int(call.data[6:])  # Convert to int
        month_names = {1: '—è–Ω–≤–∞—Ä—å', 2: '—Ñ–µ–≤—Ä–∞–ª—å', 3: '–º–∞—Ä—Ç', 4: '–∞–ø—Ä–µ–ª—å', 5: '–º–∞–π', 6: '–∏—é–Ω—å', 7: '–∏—é–ª—å', 8: '–∞–≤–≥—É—Å—Ç',
                       9: '—Å–µ–Ω—Ç—è–±—Ä—å', 10: '–æ–∫—Ç—è–±—Ä—å', 11: '–Ω–æ—è–±—Ä—å', 12: '–¥–µ–∫–∞–±—Ä—å'}
        user_data['month_name'] = month_names.get(user_data['month'], 'Unknown month')
        day_selector(call)
    elif call.data.startswith('day'):
        user_data['day'] = int(call.data[4:])  # Convert to int
        bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–µ–Ω—å {user_data["day"]}.')
        show_delivery_times(call)
    elif call.data.startswith('time'):
        user_data['time'] = call.data[5:]
        select_city(call)
    elif call.data.startswith('city'):
        city_number = int(call.data[5:])
        user_data['city'] = city_number
        city_names = {'1': '–ü–æ–¥–≥–æ—Ä–∏—Ü–∞', '2': '–ë–∞—Ä', '3': '–¶–µ—Ç–∏–Ω–µ', '4': '–ê–Ω–¥—Ä–∏–µ–≤–∏—Ü–∞', '5': '–ë–µ—Ä–∞–Ω–µ', '6': '–ë–∏–µ–ª–æ-–ü–æ–ª–µ',
                      '7': '–ë—É–¥–≤–∞', '8': '–î–∞–Ω–∏–ª–æ–≤–≥—Ä–∞–¥', '9': '–ñ–∞–±–ª—è–∫', '10': '–ö–æ–ª–∞—à–∏–Ω', '11': '–ö–æ—Ç–æ—Ä', '12': '–ú–æ–π–∫–æ–≤–∞—Ü',
                      '13': '–ù–∏–∫—à–∏—á', '14': '–ü–ª–∞–≤', '15': '–ü–ª–µ–≤–ª—è', '16': '–ü–ª—É–∂–∏–Ω–µ', '17': '–†–æ–∂–∞–µ', '18': '–¢–∏–≤–∞—Ç',
                      '19': '–£–ª—Ü–∏–Ω—å', '20': '–•–µ—Ä—Ü–µ–≥-–ù–æ–≤–∏', '21': '–®–∞–≤–Ω–∏–∫'}
        user_data['city_name'] = city_names.get(str(city_number), 'Unknown city')

        confirm_booking(call)


def andle_callback_query(call):
    if call.data.startswith('brand_'):
        selected_car_brand = int(call.data[6:]) - 1
        markup = InlineKeyboardMarkup()
        for i in range(0, len(car_models[car_brands[selected_car_brand]]), 2):
            if i + 1 < len(car_models[car_brands[selected_car_brand]]):
                markup.row(InlineKeyboardButton(car_models[car_brands[selected_car_brand]][i], callback_data=f"model_{i+1}"),
                           InlineKeyboardButton(car_models[car_brands[selected_car_brand]][i+1], callback_data=f"model_{i+2}"))
            else:
                markup.row(InlineKeyboardButton(car_models[car_brands[selected_car_brand]][i], callback_data=f"model_{i+1}"))
        markup.row(InlineKeyboardButton("Back to main menu", callback_data='main_menu'))
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –º–∞—à–∏–Ω—ã', reply_markup=markup)
    elif call.data.startswith('model_'):
        # –Ω–µ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ user_data['brand']
        selected_car_model = int(call.data[6:]) - 1
        bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data[6:]}", reply_markup=InlineKeyboardMarkup())
    elif call.data == 'main_menu':
        # –Ω–µ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ user_data['brand']
        bot.send_message(call.message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é', reply_markup=InlineKeyboardMarkup())



def callback_query_handler_year(call):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("2024", callback_data=f'year_2024'),
                   InlineKeyboardButton("2025", callback_data=f'year_2025'),
                   InlineKeyboardButton("2026", callback_data=f'year_2026'))
    markup.row(InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –ú–µ–Ω—é", callback_data='main_menu'))
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã', reply_markup=markup)

def select_month(call):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("–Ø–Ω–≤–∞—Ä—å", callback_data=f"month_1"),
                   InlineKeyboardButton("–§–µ–≤—Ä–∞–ª—å", callback_data=f"month_2"),
                   InlineKeyboardButton("–ú–∞—Ä—Ç", callback_data=f"month_3"),
                   InlineKeyboardButton("–ê–ø—Ä–µ–ª—å", callback_data=f"month_4"),
                   InlineKeyboardButton("–ú–∞–π", callback_data=f"month_5"))
    markup.row(InlineKeyboardButton("–ò—é–Ω—å", callback_data=f"month_6"),
                   InlineKeyboardButton("–ò—é–ª—å", callback_data=f"month_7"),
                   InlineKeyboardButton("–ê–≤–≥—É—Å—Ç", callback_data=f"month_8"),
                   InlineKeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å", callback_data=f"month_9"),
                   InlineKeyboardButton("–û–∫—Ç—è–±—Ä—å", callback_data=f"month_10"))
    markup.row(InlineKeyboardButton("–ù–æ—è–±—Ä—å", callback_data=f"month_11"),
                   InlineKeyboardButton("–î–µ–∫–∞–±—Ä—å", callback_data=f"month_12"))
    markup.row(InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –ú–µ–Ω—é", callback_data='main_menu'))
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã', reply_markup=markup)


def day_selector(call):
    markup = InlineKeyboardMarkup()
    days = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
            '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']
    for day in range(0, len(days), 5):
        markup.row(InlineKeyboardButton(days[day], callback_data=f'day_{days[day]}'),
                   InlineKeyboardButton(days[day+1], callback_data=f'day_{days[day+1]}'),
                   InlineKeyboardButton(days[day+2], callback_data=f'day_{days[day+2]}'),
                   InlineKeyboardButton(days[day+3], callback_data=f'day_{days[day+3]}'),
                   InlineKeyboardButton(days[day+4], callback_data=f'day_{days[day+4]}'))
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã', reply_markup=markup)

def show_delivery_times(call):
    markup = InlineKeyboardMarkup()
    for i in range(7, 20, 3):
        markup.row(
            InlineKeyboardButton(f"{i}:00", callback_data=f"time_{i}:00"),
            InlineKeyboardButton(f"{i+1}:00", callback_data=f"time_{i+1}:00"),
            InlineKeyboardButton(f"{i+2}:00", callback_data=f"time_{i+2}:00")
        )
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã', reply_markup=markup)

def select_city(call):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("–ü–æ–¥–≥–æ—Ä–∏—Ü–∞", callback_data=f"city_1"),
                   InlineKeyboardButton("–ë–∞—Ä", callback_data=f"city_2"),
                   InlineKeyboardButton("–¶–µ—Ç–∏–Ω–µ", callback_data=f"city_3"),
                   InlineKeyboardButton("–ê–Ω–¥—Ä–∏–µ–≤–∏—Ü–∞", callback_data=f"city_4"))
    markup.row(InlineKeyboardButton("–ë–µ—Ä–∞–Ω–µ", callback_data=f"city_5"),
                   InlineKeyboardButton("–ë–∏–µ–ª–æ-–ü–æ–ª–µ", callback_data=f"city_6"),
                   InlineKeyboardButton("–ë—É–¥–≤–∞", callback_data=f"city_7"),
                   InlineKeyboardButton("–î–∞–Ω–∏–ª–æ–≤–≥—Ä–∞–¥", callback_data=f"city_8"))
    markup.row(InlineKeyboardButton("–ñ–∞–±–ª—è–∫", callback_data=f"city_9"),
                   InlineKeyboardButton("–ö–æ–ª–∞—à–∏–Ω", callback_data=f"city_10"),
                   InlineKeyboardButton("–ö–æ—Ç–æ—Ä", callback_data=f"city_11"),
                   InlineKeyboardButton("–ú–æ–π–∫–æ–≤–∞—Ü", callback_data=f"city_12"))
    markup.row(InlineKeyboardButton("–ù–∏–∫—à–∏—á", callback_data=f"city_13"),
                   InlineKeyboardButton("–ü–ª–∞–≤", callback_data=f"city_14"),
                   InlineKeyboardButton("–ü–ª–µ–≤–ª—è", callback_data=f"city_15"),
                   InlineKeyboardButton("–ü–ª—É–∂–∏–Ω–µ", callback_data=f"city_16"))
    markup.row(InlineKeyboardButton("–†–æ–∂–∞–µ", callback_data=f"city_17"),
                   InlineKeyboardButton("–¢–∏–≤–∞—Ç", callback_data=f"city_18"),
                   InlineKeyboardButton("–£–ª—Ü–∏–Ω—å", callback_data=f"city_19"),
                   InlineKeyboardButton("–•–µ—Ä—Ü–µ–≥-–ù–æ–≤–∏", callback_data=f"city_20"))
    markup.row(InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—Å—è –≤ –º–µ–Ω—é", callback_data='main_menu'))
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', reply_markup=markup)




def get_first_last_name(user_name):
    user_name_parts = user_name.split()
    return user_name_parts[0], user_name_parts[-1]


def confirm_booking(call):
    bot.send_message(call.message.chat.id, '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ! –° –≤–∞–º–∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä.\n')
    with open('output.txt', 'a', encoding='utf-8') as f:
        f.write(f'{" " * 12}üöó –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è üöó{" " * 20}\n')
        f.write('**************************************************\n')
        f.write(f'–ú–∞—Ä–∫–∞: {user_data.get("brand")} üöó\n')
        f.write(f'{"=" * 50}\n')
        f.write(f'–ú–æ–¥–µ–ª—å: {user_data.get("model")} üèéÔ∏è\n')
        f.write(f'{"=" * 50}\n')
        f.write(f'–ì–æ–¥: {user_data.get("year")} \n')
        f.write(f'{"=" * 50}\n')
        f.write(f'–ú–µ—Å—è—Ü –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("month_name")} üìÖ\n')
        f.write(f'{"=" * 50}\n')
        f.write(f'–î–µ–Ω—å –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("day")} \n')
        f.write(f'‚è∞ –í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("time")} ‚è∞\n')
        f.write(f'{"=" * 50}\n')
        f.write(f'üè† –ì–æ—Ä–æ–¥: {city[int(call.data[5:]) - 0]} \n')
        f.write('**************************************************\n')
    bot.send_message(call.message.chat.id, f'–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n{"-" * 50}\n\n–ú–∞—Ä–∫–∞: {user_data.get("brand")} üöó\n–ú–æ–¥–µ–ª—å: {user_data.get("model")} üèéÔ∏è\n–ì–æ–¥: {user_data.get("year")} \n–ú–µ—Å—è—Ü –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("month_name")} üìÖ\n–î–µ–Ω—å –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("day")} \n\n–í–∞—à–µ –ò–º—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º–µ: {call.from_user.full_name}\n\n–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("time")} \n\n–ì–æ—Ä–æ–¥: {city[int(call.data[5:]) - 0]} üè†\n\n –ú—ã –∂–¥—ë–º –≤–∞—Å ! üë•')
    bot.send_message(866323263,
                     f'–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n{"-" * 50}\n\n–ú–∞—Ä–∫–∞: {user_data.get("brand")} üöó\n–ú–æ–¥–µ–ª—å: {user_data.get("model")} üèéÔ∏è\n–ì–æ–¥: {user_data.get("year")} \n–ú–µ—Å—è—Ü –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("month_name")} üìÖ\n–î–µ–Ω—å –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("day")} \n\n–ò–º—è –ö–ª–∏–µ–Ω—Ç–∞ –¢–µ–ª–µ–≥—Ä–∞–º–º: {call.from_user.full_name}\n\n–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –º–∞—à–∏–Ω—ã: {user_data.get("time")} \n\n–ì–æ—Ä–æ–¥: {city[int(call.data[5:]) - 0]} üè†\n\n –ú—ã –∂–¥—ë–º –≤–∞—Å ! üë•')
    bot.send_message(call.message.chat.id, '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –ø–æ –Ω–æ–º–µ—Ä—É ‚òéÔ∏è 99999999999')

    name = user_data.get('first_name')
    surname = user_data.get('last_name')
    phone_number = user_data.get('phone_number')

    bot.send_message(call.message.chat.id, f'–í–∞—à–µ –∏–º—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º–µ: {name} {surname}')
    bot.send_message(call.message.chat.id, f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}')

if __name__ == '__main__':
    bot.polling(none_stop=True)